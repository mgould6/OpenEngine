INFO: ImGui initialized successfully.
INFO: DEBUG: Initializing shaders...
INFO: DEBUG: Bone shader compiled successfully.
INFO: Shaders initialized successfully.
INFO: PhysicsManager initialized successfully.
INFO: Entering SceneTest2.
INFO: Loading model from path: Character_TPose_Anim wo NLA.fbx
INFO: Global inverse transform set from root node transformation.
INFO: Debug: VAO Bone IDs bound to location 3.
INFO: Debug: VAO Bone Weights bound to location 4.
INFO: Explicitly logging vertex attribute configuration:
INFO: Position bound to location 0
INFO: Normal bound to location 1
INFO: TexCoords bound to location 2
INFO: BoneIDs bound to location 3 (int attribute)
INFO: Bone Weights bound to location 4 (GL_FLOAT)
INFO: Vertex data size: 25344
INFO: Indices count: 25344
INFO: Vertex[0] Position: vec3(0.077874, 1.767432, -0.061131)
INFO: Vertex[0] Normal: vec3(0.980582, -0.019239, -0.195162)
INFO: Vertex[0] TexCoords: vec2(0.750000, 0.125000)
INFO: Vertex[0] BoneIDs: [5, 6, -1, -1]
INFO: Vertex[0] Weights: [0.032047, 0.967953, 0.000000, 0.000000]
INFO: ==== Explicit Bone Mapping BEGIN ====
INFO: Bone Mapping ID[2] maps to Bone Name[DEF-spine.002]
INFO: Bone Mapping ID[23] maps to Bone Name[DEF-thigh.L.001]
INFO: Bone Mapping ID[0] maps to Bone Name[DEF-spine]
INFO: Bone Mapping ID[1] maps to Bone Name[DEF-spine.001]
INFO: Bone Mapping ID[3] maps to Bone Name[DEF-spine.003]
INFO: Bone Mapping ID[4] maps to Bone Name[DEF-spine.004]
INFO: Bone Mapping ID[22] maps to Bone Name[DEF-thigh.L]
INFO: Bone Mapping ID[9] maps to Bone Name[DEF-upper_arm.L.001]
INFO: Bone Mapping ID[5] maps to Bone Name[DEF-spine.005]
INFO: Bone Mapping ID[32] maps to Bone Name[DEF-shin.R.001]
INFO: Bone Mapping ID[11] maps to Bone Name[DEF-forearm.L.001]
INFO: Bone Mapping ID[6] maps to Bone Name[DEF-spine.006]
INFO: Bone Mapping ID[7] maps to Bone Name[DEF-shoulder.L]
INFO: Bone Mapping ID[8] maps to Bone Name[DEF-upper_arm.L]
INFO: Bone Mapping ID[31] maps to Bone Name[DEF-shin.R]
INFO: Bone Mapping ID[10] maps to Bone Name[DEF-forearm.L]
INFO: Bone Mapping ID[12] maps to Bone Name[DEF-hand.L]
INFO: Bone Mapping ID[13] maps to Bone Name[DEF-shoulder.R]
INFO: Bone Mapping ID[14] maps to Bone Name[DEF-upper_arm.R]
INFO: Bone Mapping ID[15] maps to Bone Name[DEF-upper_arm.R.001]
INFO: Bone Mapping ID[24] maps to Bone Name[DEF-shin.L]
INFO: Bone Mapping ID[16] maps to Bone Name[DEF-forearm.R]
INFO: Bone Mapping ID[25] maps to Bone Name[DEF-shin.L.001]
INFO: Bone Mapping ID[17] maps to Bone Name[DEF-forearm.R.001]
INFO: Bone Mapping ID[18] maps to Bone Name[DEF-hand.R]
INFO: Bone Mapping ID[19] maps to Bone Name[DEF-breast.L]
INFO: Bone Mapping ID[20] maps to Bone Name[DEF-breast.R]
INFO: Bone Mapping ID[21] maps to Bone Name[DEF-pelvis.L]
INFO: Bone Mapping ID[26] maps to Bone Name[DEF-foot.L]
INFO: Bone Mapping ID[27] maps to Bone Name[DEF-toe.L]
INFO: Bone Mapping ID[28] maps to Bone Name[DEF-pelvis.R]
INFO: Bone Mapping ID[29] maps to Bone Name[DEF-thigh.R]
INFO: Bone Mapping ID[30] maps to Bone Name[DEF-thigh.R.001]
INFO: Bone Mapping ID[33] maps to Bone Name[DEF-foot.R]
INFO: Bone Mapping ID[34] maps to Bone Name[DEF-toe.R]
INFO: ==== EXPLICIT BONE MAPPING END ====
INFO: Loaded 1 meshes.
INFO: INFO: Model loaded successfully.
INFO: DEBUG: Bounding Box Center: (-0.000000, 0.940108, -0.027487)
INFO: DEBUG: Bounding Box Radius: 1.230948
INFO: DEBUG: Adjusted Camera Position: (-0.000000, 0.940108, 7.401939)
INFO: INFO: Attempting to load animation: Action.001 from file: Character_TPose_Anim.fbx
INFO: Loading animation from: Character_TPose_Anim.fbx
WARNING: === DEBUG: Animation Transform at T=0 for DEF-forearm.L ===
WARNING: animationLocalTransform:
mat4x4((1.000000, -0.000000, -0.000000, 0.000000), (0.000000, 0.996212, 0.086960, 0.000000), (0.000000, -0.086960, 0.996212, 0.000000), (0.000000, 0.131829, 0.000000, 1.000000))
WARNING: bindPose:
mat4x4((0.001501, 0.954291, 0.298875, -0.000000), (0.999878, 0.003219, -0.015300, 0.000000), (-0.015563, 0.298861, -0.954170, -0.000000), (0.439895, 1.485949, -0.072786, 1.000000))
WARNING: correctedLocal (post-fix):
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
WARNING: === DEBUG: Animation Transform at T=0 for DEF-upper_arm.L ===
WARNING: animationLocalTransform:
mat4x4((0.258290, -0.150805, 0.954224, 0.000000), (0.564178, 0.825353, -0.022273, 0.000000), (-0.784213, 0.544105, 0.298261, 0.000000), (0.007058, 0.181885, -0.018465, 1.000000))
WARNING: bindPose:
mat4x4((0.001501, 0.954291, 0.298874, -0.000000), (0.997444, -0.022782, 0.067732, 0.000000), (0.071445, 0.298008, -0.951886, -0.000000), (0.176911, 1.491956, -0.090644, 1.000000))
WARNING: correctedLocal (post-fix):
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: Remapping animation bone 'breast.L' to 'DEF-breast.L'
INFO: Remapping animation bone 'breast.R' to 'DEF-breast.R'
INFO: Remapping animation bone 'foot.L' to 'DEF-foot.L'
INFO: Remapping animation bone 'foot.R' to 'DEF-foot.R'
INFO: Remapping animation bone 'forearm.L' to 'DEF-forearm.L'
WARNING: === DEBUG: Animation Transform at T=0 for DEF-forearm.L ===
WARNING: animationLocalTransform:
mat4x4((0.977008, 0.035052, 0.210303, 0.000000), (-0.017402, 0.996212, -0.085200, 0.000000), (-0.212493, 0.079581, 0.973917, 0.000000), (0.000000, 0.263658, 0.000000, 1.000000))
WARNING: bindPose:
mat4x4((0.001501, 0.954291, 0.298875, -0.000000), (0.999878, 0.003219, -0.015300, 0.000000), (-0.015563, 0.298861, -0.954170, -0.000000), (0.439895, 1.485949, -0.072786, 1.000000))
WARNING: correctedLocal (post-fix):
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: Remapping animation bone 'forearm.R' to 'DEF-forearm.R'
INFO: Remapping animation bone 'hand.L' to 'DEF-hand.L'
INFO: Remapping animation bone 'hand.R' to 'DEF-hand.R'
INFO: Remapping animation bone 'pelvis.L' to 'DEF-pelvis.L'
INFO: Remapping animation bone 'pelvis.R' to 'DEF-pelvis.R'
INFO: Remapping animation bone 'shin.L' to 'DEF-shin.L'
INFO: Remapping animation bone 'shin.R' to 'DEF-shin.R'
INFO: Remapping animation bone 'shoulder.L' to 'DEF-shoulder.L'
INFO: Remapping animation bone 'shoulder.R' to 'DEF-shoulder.R'
INFO: Remapping animation bone 'spine' to 'DEF-spine'
INFO: Remapping animation bone 'spine.001' to 'DEF-spine.001'
INFO: Remapping animation bone 'spine.002' to 'DEF-spine.002'
INFO: Remapping animation bone 'spine.003' to 'DEF-spine.003'
INFO: Remapping animation bone 'spine.004' to 'DEF-spine.004'
INFO: Remapping animation bone 'spine.005' to 'DEF-spine.005'
INFO: Remapping animation bone 'spine.006' to 'DEF-spine.006'
INFO: Remapping animation bone 'thigh.L' to 'DEF-thigh.L'
INFO: Remapping animation bone 'thigh.R' to 'DEF-thigh.R'
INFO: Remapping animation bone 'toe.L' to 'DEF-toe.L'
INFO: Remapping animation bone 'toe.R' to 'DEF-toe.R'
INFO: Remapping animation bone 'upper_arm.L' to 'DEF-upper_arm.L'
WARNING: === DEBUG: Animation Transform at T=0 for DEF-upper_arm.L ===
WARNING: animationLocalTransform:
mat4x4((-0.096130, 0.038874, -0.994609, 0.000000), (0.564177, 0.825354, -0.022270, 0.000000), (0.820039, -0.563276, -0.101273, 0.000000), (0.007058, 0.181885, -0.018465, 1.000000))
WARNING: bindPose:
mat4x4((0.001501, 0.954291, 0.298874, -0.000000), (0.997444, -0.022782, 0.067732, 0.000000), (0.071445, 0.298008, -0.951886, -0.000000), (0.176911, 1.491956, -0.090644, 1.000000))
WARNING: correctedLocal (post-fix):
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: Remapping animation bone 'upper_arm.R' to 'DEF-upper_arm.R'
INFO: Animation loaded and re-normalized relative to model bind pose.
INFO: INFO: Successfully loaded animation: Action.001
INFO: Switched to animation: Action.001
INFO: INFO: Set current animation to Action.001.
INFO: DEBUG: Depth testing and blending enabled.
INFO: Debug: Animation time updated to: 0.378735
INFO: INFO: Interpolating keyframes at animation time: 0.378735
INFO: INFO: Keyframe count: 31
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-forearm.L with factor: 0.189368
WARNING: ANIM FINAL MATRIX: DEF-forearm.L @ time 0.378735
WARNING: mat4x4((1.000000, -0.000005, -0.000089, 0.000000), (0.000007, 0.999797, 0.020168, 0.000000), (0.000089, -0.020168, 0.999797, 0.000000), (0.000000, 0.024964, 0.000000, 1.000000))
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-forearm.L.001 with factor: 0.189368
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-forearm.R with factor: 0.189368
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-forearm.R.001 with factor: 0.189368
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-hand.L with factor: 0.189368
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-hand.R with factor: 0.189368
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-upper_arm.L with factor: 0.189368
WARNING: ANIM FINAL MATRIX: DEF-upper_arm.L @ time 0.378735
WARNING: mat4x4((0.968411, -0.089163, 0.232872, 0.000000), (0.106110, 0.992465, -0.061263, 0.000000), (-0.225655, 0.084038, 0.970576, 0.000000), (0.001337, 0.034443, -0.003497, 1.000000))
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-upper_arm.L.001 with factor: 0.189368
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-upper_arm.R with factor: 0.189368
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.189368
INFO: INFO: Interpolated bone: DEF-upper_arm.R.001 with factor: 0.189368
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-breast.L]:
mat4x4((-1.000000, -0.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (-0.000000, 1.000000, -0.000000, 0.000000), (0.107252, 0.110391, -1.378726, 1.000000))
INFO: DEBUG: After Storing Bone DEF-breast.L
INFO: Applied globalInverse * global * offset for bone: DEF-breast.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-breast.R]:
mat4x4((-1.000000, 0.000000, -0.000000, 0.000000), (-0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 1.000000, -0.000000, 0.000000), (-0.107252, 0.110391, -1.378726, 1.000000))
INFO: DEBUG: After Storing Bone DEF-breast.R
INFO: Applied globalInverse * global * offset for bone: DEF-breast.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-foot.L]:
mat4x4((0.964083, 0.178993, 0.196227, 0.000000), (0.265600, -0.649715, -0.712269, 0.000000), (0.000001, 0.738804, -0.673920, 0.000000), (-0.087785, 0.097230, 0.030920, 1.000000))
INFO: DEBUG: After Storing Bone DEF-foot.L
INFO: Applied globalInverse * global * offset for bone: DEF-foot.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-foot.R]:
mat4x4((0.964083, -0.178993, -0.196227, 0.000000), (-0.265600, -0.649715, -0.712269, 0.000000), (-0.000001, 0.738804, -0.673920, 0.000000), (0.087785, 0.097230, 0.030920, 1.000000))
INFO: DEBUG: After Storing Bone DEF-foot.R
INFO: Applied globalInverse * global * offset for bone: DEF-foot.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-forearm.L]:
mat4x4((0.001507, 0.999988, 0.004606, 0.000000), (0.954318, -0.002814, 0.298781, 0.000000), (0.298790, 0.003946, -0.954311, 0.000000), (-1.396983, -0.410457, -0.515459, 1.000000))
WARNING: === DEBUG: FINAL TRANSFORM APPLY FOR DEF-forearm.L ===
WARNING: Global Transform:
mat4x4((1.000000, -0.000005, -0.000089, 0.000000), (0.000007, 0.999797, 0.020168, 0.000000), (0.000089, -0.020168, 0.999797, 0.000000), (0.000000, 0.024964, 0.000000, 1.000000))
WARNING: Offset Matrix (Inverse Bind Pose):
mat4x4((0.001501, 0.999878, -0.015562, 0.000000), (0.954291, 0.003219, 0.298861, 0.000000), (0.298875, -0.015300, -0.954170, 0.000000), (-1.396935, -0.445738, -0.506697, 1.000000))
WARNING: Global Inverse Transform:
mat4x4((1.000000, -0.000000, 0.000000, -0.000000), (-0.000000, 1.000000, -0.000000, 0.000000), (0.000000, -0.000000, 1.000000, -0.000000), (-0.000000, 0.000000, -0.000000, 1.000000))
WARNING: Resulting Final Transform:
mat4x4((0.001507, 0.999988, 0.004606, 0.000000), (0.954318, -0.002814, 0.298781, 0.000000), (0.298790, 0.003946, -0.954311, 0.000000), (-1.396983, -0.410457, -0.515459, 1.000000))
INFO: Decomposed transform for DEF-forearm.L: Translation(-1.39698, -0.410457, -0.515459), Scale(1, 1, 1)
INFO: DEBUG: After Storing Bone DEF-forearm.L
INFO: Applied globalInverse * global * offset for bone: DEF-forearm.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-forearm.L.001]:
mat4x4((0.001499, 0.999878, -0.015563, 0.000000), (0.954322, 0.003219, 0.298763, 0.000000), (0.298776, -0.015300, -0.954201, 0.000000), (-1.396987, -0.543135, -0.506552, 1.000000))
INFO: DEBUG: After Storing Bone DEF-forearm.L.001
INFO: Applied globalInverse * global * offset for bone: DEF-forearm.L.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-forearm.R]:
mat4x4((0.001507, -0.999988, -0.004607, 0.000000), (-0.954318, -0.002814, 0.298780, 0.000000), (-0.298790, 0.003946, -0.954311, 0.000000), (1.396983, -0.410457, -0.515459, 1.000000))
INFO: DEBUG: After Storing Bone DEF-forearm.R
INFO: Applied globalInverse * global * offset for bone: DEF-forearm.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-forearm.R.001]:
mat4x4((0.001499, -0.999878, 0.015563, 0.000000), (-0.954322, 0.003220, 0.298762, 0.000000), (-0.298776, -0.015300, -0.954201, 0.000000), (1.396987, -0.543136, -0.506552, 1.000000))
INFO: DEBUG: After Storing Bone DEF-forearm.R.001
INFO: Applied globalInverse * global * offset for bone: DEF-forearm.R.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-hand.L]:
mat4x4((0.029094, 0.998603, 0.044102, 0.000000), (0.953496, -0.040967, 0.298608, 0.000000), (0.299997, 0.033363, -0.953356, 0.000000), (-1.414435, -0.593003, -0.546839, 1.000000))
INFO: DEBUG: After Storing Bone DEF-hand.L
INFO: Applied globalInverse * global * offset for bone: DEF-hand.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-hand.R]:
mat4x4((0.029094, -0.998603, -0.044102, 0.000000), (-0.953496, -0.040967, 0.298608, 0.000000), (-0.299997, 0.033363, -0.953356, 0.000000), (1.414435, -0.593003, -0.546839, 1.000000))
INFO: DEBUG: After Storing Bone DEF-hand.R
INFO: Applied globalInverse * global * offset for bone: DEF-hand.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-pelvis.L]:
mat4x4((-0.421772, 0.536322, -0.731073, 0.000000), (-0.276838, 0.691624, 0.667096, 0.000000), (0.863406, 0.483751, -0.143234, 0.000000), (0.369463, -0.615484, -0.664677, 1.000000))
INFO: DEBUG: After Storing Bone DEF-pelvis.L
INFO: Applied globalInverse * global * offset for bone: DEF-pelvis.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-pelvis.R]:
mat4x4((-0.421772, -0.536322, 0.731073, 0.000000), (0.276838, 0.691624, 0.667096, 0.000000), (-0.863406, 0.483751, -0.143234, 0.000000), (-0.369463, -0.615484, -0.664677, 1.000000))
INFO: DEBUG: After Storing Bone DEF-pelvis.R
INFO: Applied globalInverse * global * offset for bone: DEF-pelvis.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shin.L]:
mat4x4((0.935418, -0.049135, 0.350112, 0.000000), (-0.058899, -0.998115, 0.017290, 0.000000), (0.348603, -0.036795, -0.936548, 0.000000), (-0.033043, 0.533475, -0.071050, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shin.L
INFO: Applied globalInverse * global * offset for bone: DEF-shin.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shin.L.001]:
mat4x4((0.935418, -0.049135, 0.350112, 0.000000), (-0.058899, -0.998115, 0.017290, 0.000000), (0.348602, -0.036795, -0.936549, 0.000000), (-0.033043, 0.321455, -0.071050, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shin.L.001
INFO: Applied globalInverse * global * offset for bone: DEF-shin.L.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shin.R]:
mat4x4((0.935418, 0.049135, -0.350112, 0.000000), (0.058899, -0.998115, 0.017290, 0.000000), (-0.348603, -0.036795, -0.936548, 0.000000), (0.033043, 0.533475, -0.071050, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shin.R
INFO: Applied globalInverse * global * offset for bone: DEF-shin.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shin.R.001]:
mat4x4((0.935418, 0.049135, -0.350112, 0.000000), (0.058899, -0.998115, 0.017290, 0.000000), (-0.348602, -0.036795, -0.936549, 0.000000), (0.033043, 0.321455, -0.071050, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shin.R.001
INFO: Applied globalInverse * global * offset for bone: DEF-shin.R.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shoulder.L]:
mat4x4((0.507095, 0.861890, 0.000529, 0.000000), (-0.000074, -0.000570, 1.000000, 0.000000), (0.861890, -0.507095, -0.000226, 0.000000), (-0.004417, -0.015707, -1.510536, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shoulder.L
INFO: Applied globalInverse * global * offset for bone: DEF-shoulder.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shoulder.R]:
mat4x4((0.507095, -0.861890, -0.000529, 0.000000), (0.000074, -0.000570, 1.000000, 0.000000), (-0.861890, -0.507095, -0.000226, 0.000000), (0.004417, -0.015707, -1.510536, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shoulder.R
INFO: Applied globalInverse * global * offset for bone: DEF-shoulder.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.971880, -0.235478, 0.000000), (0.000000, 0.235478, 0.971880, 0.000000), (0.000000, -0.916629, 0.341921, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine
INFO: Applied globalInverse * global * offset for bone: DEF-spine
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.001]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.992413, -0.122954, 0.000000), (0.000000, 0.122954, 0.992412, 0.000000), (0.000000, -1.104045, 0.217266, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.001
INFO: Applied globalInverse * global * offset for bone: DEF-spine.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.002]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999869, 0.016174, 0.000000), (0.000000, -0.016174, 0.999869, 0.000000), (0.000000, -1.211187, 0.049404, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.002
INFO: Applied globalInverse * global * offset for bone: DEF-spine.002
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.003]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999592, 0.028560, 0.000000), (0.000000, -0.028560, 0.999592, 0.000000), (0.000000, -1.385738, 0.032239, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.003
INFO: Applied globalInverse * global * offset for bone: DEF-spine.003
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.004]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.929516, -0.368784, 0.000000), (0.000000, 0.368784, 0.929515, 0.000000), (0.000000, -1.420450, 0.646168, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.004
INFO: Applied globalInverse * global * offset for bone: DEF-spine.004
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.005]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.982436, -0.186599, 0.000000), (0.000000, 0.186599, 0.982436, 0.000000), (0.000000, -1.575778, 0.354954, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.005
INFO: Applied globalInverse * global * offset for bone: DEF-spine.005
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.006]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, -0.000000, 1.000000, 0.000000), (0.000000, -1.670135, 0.044083, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.006
INFO: Applied globalInverse * global * offset for bone: DEF-spine.006
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-thigh.L]:
mat4x4((0.935413, -0.093497, 0.340971, 0.000000), (-0.058897, -0.992132, -0.110475, 0.000000), (0.348618, 0.083257, -0.933560, 0.000000), (-0.033043, 1.046192, -0.002256, 1.000000))
INFO: DEBUG: After Storing Bone DEF-thigh.L
INFO: Applied globalInverse * global * offset for bone: DEF-thigh.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-thigh.L.001]:
mat4x4((0.935411, -0.093497, 0.340975, 0.000000), (-0.058896, -0.992132, -0.110475, 0.000000), (0.348622, 0.083257, -0.933559, 0.000000), (-0.033043, 0.792186, -0.002256, 1.000000))
INFO: DEBUG: After Storing Bone DEF-thigh.L.001
INFO: Applied globalInverse * global * offset for bone: DEF-thigh.L.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-thigh.R]:
mat4x4((0.935413, 0.093497, -0.340971, 0.000000), (0.058897, -0.992132, -0.110475, 0.000000), (-0.348618, 0.083257, -0.933560, 0.000000), (0.033043, 1.046192, -0.002256, 1.000000))
INFO: DEBUG: After Storing Bone DEF-thigh.R
INFO: Applied globalInverse * global * offset for bone: DEF-thigh.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-thigh.R.001]:
mat4x4((0.935411, 0.093497, -0.340975, 0.000000), (0.058896, -0.992132, -0.110475, 0.000000), (-0.348622, 0.083257, -0.933559, 0.000000), (0.033043, 0.792186, -0.002256, 1.000000))
INFO: DEBUG: After Storing Bone DEF-thigh.R.001
INFO: Applied globalInverse * global * offset for bone: DEF-thigh.R.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-toe.L]:
mat4x4((-0.964083, 0.000000, -0.265599, 0.000000), (-0.265600, 0.000000, 0.964084, 0.000000), (-0.000000, 1.000000, 0.000000, 0.000000), (0.087785, -0.018148, -0.025298, 1.000000))
INFO: DEBUG: After Storing Bone DEF-toe.L
INFO: Applied globalInverse * global * offset for bone: DEF-toe.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-toe.R]:
mat4x4((-0.964083, -0.000000, 0.265599, 0.000000), (0.265600, 0.000000, 0.964084, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (-0.087785, -0.018148, -0.025298, 1.000000))
INFO: DEBUG: After Storing Bone DEF-toe.R
INFO: Applied globalInverse * global * offset for bone: DEF-toe.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-upper_arm.L]:
mat4x4((0.091171, 0.995798, 0.008585, 0.000000), (0.854483, -0.082654, 0.512863, 0.000000), (0.511417, -0.039422, -0.858428, 0.000000), (-1.243286, -0.021982, -0.847995, 1.000000))
WARNING: === DEBUG: FINAL TRANSFORM APPLY FOR DEF-upper_arm.L ===
WARNING: Global Transform:
mat4x4((0.968411, -0.089163, 0.232872, 0.000000), (0.106110, 0.992465, -0.061263, 0.000000), (-0.225655, 0.084038, 0.970576, 0.000000), (0.001337, 0.034443, -0.003497, 1.000000))
WARNING: Offset Matrix (Inverse Bind Pose):
mat4x4((0.001501, 0.997443, 0.071445, 0.000000), (0.954292, -0.022782, 0.298008, 0.000000), (0.298874, 0.067732, -0.951886, 0.000000), (-1.396935, -0.136329, -0.543537, 1.000000))
WARNING: Global Inverse Transform:
mat4x4((1.000000, -0.000000, 0.000000, -0.000000), (-0.000000, 1.000000, -0.000000, 0.000000), (0.000000, -0.000000, 1.000000, -0.000000), (-0.000000, 0.000000, -0.000000, 1.000000))
WARNING: Resulting Final Transform:
mat4x4((0.091171, 0.995798, 0.008585, 0.000000), (0.854483, -0.082654, 0.512863, 0.000000), (0.511417, -0.039422, -0.858428, 0.000000), (-1.243286, -0.021982, -0.847995, 1.000000))
INFO: Decomposed transform for DEF-upper_arm.L: Translation(-1.24329, -0.0219817, -0.847995), Scale(1, 1, 1)
INFO: DEBUG: After Storing Bone DEF-upper_arm.L
INFO: Applied globalInverse * global * offset for bone: DEF-upper_arm.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-upper_arm.L.001]:
mat4x4((0.001507, 0.997443, 0.071445, 0.000000), (0.954318, -0.022782, 0.297924, 0.000000), (0.298790, 0.067732, -0.951912, 0.000000), (-1.396983, -0.243195, -0.543413, 1.000000))
INFO: DEBUG: After Storing Bone DEF-upper_arm.L.001
INFO: Applied globalInverse * global * offset for bone: DEF-upper_arm.L.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-upper_arm.R]:
mat4x4((0.091171, -0.995798, -0.008586, 0.000000), (-0.854482, -0.082655, 0.512863, 0.000000), (-0.511417, -0.039422, -0.858428, 0.000000), (1.243286, -0.021981, -0.847995, 1.000000))
INFO: DEBUG: After Storing Bone DEF-upper_arm.R
INFO: Applied globalInverse * global * offset for bone: DEF-upper_arm.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-upper_arm.R.001]:
mat4x4((0.001507, -0.997443, -0.071445, 0.000000), (-0.954318, -0.022781, 0.297924, 0.000000), (-0.298790, 0.067732, -0.951912, 0.000000), (1.396983, -0.243195, -0.543414, 1.000000))
INFO: DEBUG: After Storing Bone DEF-upper_arm.R.001
INFO: Applied globalInverse * global * offset for bone: DEF-upper_arm.R.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [MCH-spine]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.992412, -0.122954, 0.000000), (0.000000, 0.122954, 0.992412, 0.000000), (0.000000, -0.088520, -0.000000, 1.000000))
INFO: DEBUG: After Storing Bone MCH-spine
INFO: Applied globalInverse * global * offset for bone: MCH-spine
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [MCH-spine.001]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.163355, 0.029178, 1.000000))
INFO: DEBUG: After Storing Bone MCH-spine.001
INFO: Applied globalInverse * global * offset for bone: MCH-spine.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [MCH-spine.002]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.163355, 0.029178, 1.000000))
INFO: DEBUG: After Storing Bone MCH-spine.002
INFO: Applied globalInverse * global * offset for bone: MCH-spine.002
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [MCH-spine.003]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999869, 0.016174, 0.000000), (0.000000, -0.016174, 0.999869, 0.000000), (0.000000, 0.174045, -0.000000, 1.000000))
INFO: DEBUG: After Storing Bone MCH-spine.003
INFO: Applied globalInverse * global * offset for bone: MCH-spine.003
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [MCH-torso.parent]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 1.046875, -0.098165, 1.000000))
INFO: DEBUG: After Storing Bone MCH-torso.parent
INFO: Applied globalInverse * global * offset for bone: MCH-torso.parent
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [ORG-breast.L]:
mat4x4((-1.000000, 0.000000, 0.000000, 0.000000), (-0.000000, -0.028560, 0.999592, 0.000000), (0.000000, 0.999592, 0.028560, 0.000000), (0.107252, -0.004422, -0.038731, 1.000000))
INFO: DEBUG: After Storing Bone ORG-breast.L
INFO: Applied globalInverse * global * offset for bone: ORG-breast.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [ORG-breast.R]:
mat4x4((-1.000000, -0.000000, -0.000000, 0.000000), (0.000000, -0.028560, 0.999592, 0.000000), (-0.000000, 0.999592, 0.028560, 0.000000), (-0.107252, -0.004422, -0.038731, 1.000000))
INFO: DEBUG: After Storing Bone ORG-breast.R
INFO: Applied globalInverse * global * offset for bone: ORG-breast.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [ORG-pelvis.L]:
mat4x4((-0.421772, -0.065740, 0.904316, 0.000000), (0.536322, 0.786088, 0.307285, 0.000000), (-0.731073, 0.614609, -0.296292, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone ORG-pelvis.L
INFO: Applied globalInverse * global * offset for bone: ORG-pelvis.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [ORG-pelvis.R]:
mat4x4((-0.421772, 0.065740, -0.904316, 0.000000), (-0.536322, 0.786088, 0.307285, 0.000000), (0.731073, 0.614609, -0.296292, 0.000000), (-0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone ORG-pelvis.R
INFO: Applied globalInverse * global * offset for bone: ORG-pelvis.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [ORG-shoulder.L]:
mat4x4((0.507095, -0.024689, 0.861537, 0.000000), (0.861890, 0.013912, -0.506904, 0.000000), (0.000529, 0.999598, 0.028334, 0.000000), (0.016577, 0.124301, 0.070883, 1.000000))
INFO: DEBUG: After Storing Bone ORG-shoulder.L
INFO: Applied globalInverse * global * offset for bone: ORG-shoulder.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [ORG-shoulder.R]:
mat4x4((0.507095, 0.024689, -0.861537, 0.000000), (-0.861890, 0.013912, -0.506904, 0.000000), (-0.000529, 0.999598, 0.028334, 0.000000), (-0.016577, 0.124301, 0.070883, 1.000000))
INFO: DEBUG: After Storing Bone ORG-shoulder.R
INFO: Applied globalInverse * global * offset for bone: ORG-shoulder.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [ORG-spine]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, -0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, -0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone ORG-spine
INFO: Applied globalInverse * global * offset for bone: ORG-spine
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [ORG-spine.003]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, -0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone ORG-spine.003
INFO: Applied globalInverse * global * offset for bone: ORG-spine.003
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [heel.02.L]:
mat4x4((-0.153809, 0.738805, -0.656133, 0.000000), (0.983423, 0.178993, -0.028986, 0.000000), (0.096028, -0.649715, -0.754089, 0.000000), (-0.015896, 0.004032, 0.095199, 1.000000))
INFO: DEBUG: After Storing Bone heel.02.L
INFO: Applied globalInverse * global * offset for bone: heel.02.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [heel.02.R]:
mat4x4((-0.153809, -0.738805, 0.656133, 0.000000), (-0.983423, 0.178993, -0.028986, 0.000000), (-0.096028, -0.649715, -0.754089, 0.000000), (0.015896, 0.004032, 0.095199, 1.000000))
INFO: DEBUG: After Storing Bone heel.02.R
INFO: Applied globalInverse * global * offset for bone: heel.02.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [metarig]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, -0.000000, -1.000000, 0.000000), (0.000000, 1.000000, -0.000000, 0.000000), (0.000000, 0.000000, 2.292934, 1.000000))
INFO: DEBUG: After Storing Bone metarig
INFO: Applied globalInverse * global * offset for bone: metarig
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [rig]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, -0.000000, -1.000000, 0.000000), (0.000000, 1.000000, -0.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone rig
INFO: Applied globalInverse * global * offset for bone: rig
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [root]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone root
INFO: Applied globalInverse * global * offset for bone: root
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [spine_fk]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.971880, 0.235478, 0.000000), (0.000000, -0.235478, 0.971880, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone spine_fk
INFO: Applied globalInverse * global * offset for bone: spine_fk
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [spine_fk.001]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.992412, 0.122954, 0.000000), (0.000000, -0.122954, 0.992412, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone spine_fk.001
INFO: Applied globalInverse * global * offset for bone: spine_fk.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [spine_fk.002]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999869, -0.016174, 0.000000), (0.000000, 0.016174, 0.999869, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone spine_fk.002
INFO: Applied globalInverse * global * offset for bone: spine_fk.002
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [spine_fk.003]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999592, -0.028560, 0.000000), (0.000000, 0.028560, 0.999592, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone spine_fk.003
INFO: Applied globalInverse * global * offset for bone: spine_fk.003
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [torso]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone torso
INFO: Applied globalInverse * global * offset for bone: torso
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [tweak_spine]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, -0.000000, 1.000000, 0.000000), (0.000000, -0.155383, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone tweak_spine
INFO: Applied globalInverse * global * offset for bone: tweak_spine
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [tweak_spine.003]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, -0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: DEBUG: After Storing Bone tweak_spine.003
INFO: Applied globalInverse * global * offset for bone: tweak_spine.003
INFO: DEBUG: Max Vertex Attributes: 32
INFO: Model matrix explicitly logged: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))
INFO: View matrix explicitly logged: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, -0.000000, 0.000000), (-0.000000, 0.000000, 1.000000, 0.000000), (0.000000, -0.940108, -7.401939, 1.000000))
INFO: Projection matrix explicitly logged: mat4x4((1.810660, 0.000000, 0.000000, 0.000000), (0.000000, 2.414213, 0.000000, 0.000000), (0.000000, 0.000000, -1.002002, -1.000000), (0.000000, 0.000000, -0.200200, 0.000000))
INFO: Bone [DEF-spine] FINAL TRANSFORM:
INFO: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.971880, -0.235478, 0.000000), (0.000000, 0.235478, 0.971880, 0.000000), (0.000000, -0.916629, 0.341921, 1.000000))
INFO: Bone: DEF-spine Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.000000, -0.916629, 0.341921) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-spine: Translation(0, -0.916629, 0.341921), Scale(1, 1, 1)
INFO: Bone [DEF-spine.001] FINAL TRANSFORM:
INFO: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.992413, -0.122954, 0.000000), (0.000000, 0.122954, 0.992412, 0.000000), (0.000000, -1.104045, 0.217266, 1.000000))
INFO: Bone: DEF-spine.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.000000, -1.104045, 0.217266) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-spine.001: Translation(0, -1.10405, 0.217266), Scale(1, 1, 1)
INFO: Bone [DEF-spine.002] FINAL TRANSFORM:
INFO: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999869, 0.016174, 0.000000), (0.000000, -0.016174, 0.999869, 0.000000), (0.000000, -1.211187, 0.049404, 1.000000))
INFO: Bone: DEF-spine.002 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.000000, -1.211187, 0.049404) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-spine.002: Translation(0, -1.21119, 0.049404), Scale(1, 1, 1)
INFO: Bone [DEF-spine.003] FINAL TRANSFORM:
INFO: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999592, 0.028560, 0.000000), (0.000000, -0.028560, 0.999592, 0.000000), (0.000000, -1.385738, 0.032239, 1.000000))
INFO: Bone: DEF-spine.003 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.000000, -1.385738, 0.032239) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-spine.003: Translation(0, -1.38574, 0.0322388), Scale(1, 1, 1)
INFO: Bone [DEF-spine.004] FINAL TRANSFORM:
INFO: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.929516, -0.368784, 0.000000), (0.000000, 0.368784, 0.929515, 0.000000), (0.000000, -1.420450, 0.646168, 1.000000))
INFO: Bone: DEF-spine.004 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.000000, -1.420450, 0.646168) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-spine.004: Translation(0, -1.42045, 0.646168), Scale(1, 1, 1)
INFO: Bone [DEF-spine.005] FINAL TRANSFORM:
INFO: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.982436, -0.186599, 0.000000), (0.000000, 0.186599, 0.982436, 0.000000), (0.000000, -1.575778, 0.354954, 1.000000))
INFO: Bone: DEF-spine.005 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.000000, -1.575778, 0.354954) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-spine.005: Translation(0, -1.57578, 0.354954), Scale(1, 1, 1)
INFO: Bone [DEF-spine.006] FINAL TRANSFORM:
INFO: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, -0.000000, 1.000000, 0.000000), (0.000000, -1.670135, 0.044083, 1.000000))
INFO: Bone: DEF-spine.006 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.000000, -1.670135, 0.044083) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-spine.006: Translation(0, -1.67014, 0.0440832), Scale(1, 1, 1)
INFO: Bone [DEF-shoulder.L] FINAL TRANSFORM:
INFO: mat4x4((0.507095, 0.861890, 0.000529, 0.000000), (-0.000074, -0.000570, 1.000000, 0.000000), (0.861890, -0.507095, -0.000226, 0.000000), (-0.004417, -0.015707, -1.510536, 1.000000))
INFO: Bone: DEF-shoulder.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.004417, -0.015707, -1.510536) Skew: vec3(-0.000000, -0.000000, 0.000000)
INFO: Decomposed transform for DEF-shoulder.L: Translation(-0.0044175, -0.0157067, -1.51054), Scale(1, 1, 1)
INFO: Bone [DEF-upper_arm.L] FINAL TRANSFORM:
INFO: mat4x4((0.091171, 0.995798, 0.008585, 0.000000), (0.854483, -0.082654, 0.512863, 0.000000), (0.511417, -0.039422, -0.858428, 0.000000), (-1.243286, -0.021982, -0.847995, 1.000000))
INFO: Bone: DEF-upper_arm.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-1.243286, -0.021982, -0.847995) Skew: vec3(0.000000, -0.000000, 0.000000)
INFO: Decomposed transform for DEF-upper_arm.L: Translation(-1.24329, -0.0219817, -0.847995), Scale(1, 1, 1)
INFO: Bone [DEF-upper_arm.L.001] FINAL TRANSFORM:
INFO: mat4x4((0.001507, 0.997443, 0.071445, 0.000000), (0.954318, -0.022782, 0.297924, 0.000000), (0.298790, 0.067732, -0.951912, 0.000000), (-1.396983, -0.243195, -0.543413, 1.000000))
INFO: Bone: DEF-upper_arm.L.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-1.396983, -0.243195, -0.543413) Skew: vec3(-0.000000, -0.000000, 0.000000)
INFO: Decomposed transform for DEF-upper_arm.L.001: Translation(-1.39698, -0.243195, -0.543413), Scale(1, 1, 1)
INFO: Bone [DEF-forearm.L] FINAL TRANSFORM:
INFO: mat4x4((0.001507, 0.999988, 0.004606, 0.000000), (0.954318, -0.002814, 0.298781, 0.000000), (0.298790, 0.003946, -0.954311, 0.000000), (-1.396983, -0.410457, -0.515459, 1.000000))
INFO: Bone: DEF-forearm.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-1.396983, -0.410457, -0.515459) Skew: vec3(-0.000000, -0.000000, 0.000000)
INFO: Decomposed transform for DEF-forearm.L: Translation(-1.39698, -0.410457, -0.515459), Scale(1, 1, 1)
INFO: Bone [DEF-forearm.L.001] FINAL TRANSFORM:
INFO: mat4x4((0.001499, 0.999878, -0.015563, 0.000000), (0.954322, 0.003219, 0.298763, 0.000000), (0.298776, -0.015300, -0.954201, 0.000000), (-1.396987, -0.543135, -0.506552, 1.000000))
INFO: Bone: DEF-forearm.L.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-1.396987, -0.543135, -0.506552) Skew: vec3(-0.000000, -0.000000, 0.000000)
INFO: Decomposed transform for DEF-forearm.L.001: Translation(-1.39699, -0.543135, -0.506552), Scale(1, 1, 1)
INFO: Bone [DEF-hand.L] FINAL TRANSFORM:
INFO: mat4x4((0.029094, 0.998603, 0.044102, 0.000000), (0.953496, -0.040967, 0.298608, 0.000000), (0.299997, 0.033363, -0.953356, 0.000000), (-1.414435, -0.593003, -0.546839, 1.000000))
INFO: Bone: DEF-hand.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-1.414435, -0.593003, -0.546839) Skew: vec3(-0.000000, -0.000000, 0.000000)
INFO: Decomposed transform for DEF-hand.L: Translation(-1.41443, -0.593003, -0.546839), Scale(1, 1, 1)
INFO: Bone [DEF-shoulder.R] FINAL TRANSFORM:
INFO: mat4x4((0.507095, -0.861890, -0.000529, 0.000000), (0.000074, -0.000570, 1.000000, 0.000000), (-0.861890, -0.507095, -0.000226, 0.000000), (0.004417, -0.015707, -1.510536, 1.000000))
INFO: Bone: DEF-shoulder.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.004417, -0.015707, -1.510536) Skew: vec3(-0.000000, 0.000000, -0.000000)
INFO: Decomposed transform for DEF-shoulder.R: Translation(0.0044175, -0.0157067, -1.51054), Scale(1, 1, 1)
INFO: Bone [DEF-upper_arm.R] FINAL TRANSFORM:
INFO: mat4x4((0.091171, -0.995798, -0.008586, 0.000000), (-0.854482, -0.082655, 0.512863, 0.000000), (-0.511417, -0.039422, -0.858428, 0.000000), (1.243286, -0.021981, -0.847995, 1.000000))
INFO: Bone: DEF-upper_arm.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(1.243286, -0.021981, -0.847995) Skew: vec3(-0.000000, 0.000000, -0.000000)
INFO: Decomposed transform for DEF-upper_arm.R: Translation(1.24329, -0.021981, -0.847995), Scale(1, 1, 1)
INFO: Bone [DEF-upper_arm.R.001] FINAL TRANSFORM:
INFO: mat4x4((0.001507, -0.997443, -0.071445, 0.000000), (-0.954318, -0.022781, 0.297924, 0.000000), (-0.298790, 0.067732, -0.951912, 0.000000), (1.396983, -0.243195, -0.543414, 1.000000))
INFO: Bone: DEF-upper_arm.R.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(1.396983, -0.243195, -0.543414) Skew: vec3(-0.000000, 0.000000, -0.000000)
INFO: Decomposed transform for DEF-upper_arm.R.001: Translation(1.39698, -0.243195, -0.543414), Scale(1, 1, 1)
INFO: Bone [DEF-forearm.R] FINAL TRANSFORM:
INFO: mat4x4((0.001507, -0.999988, -0.004607, 0.000000), (-0.954318, -0.002814, 0.298780, 0.000000), (-0.298790, 0.003946, -0.954311, 0.000000), (1.396983, -0.410457, -0.515459, 1.000000))
INFO: Bone: DEF-forearm.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(1.396983, -0.410457, -0.515459) Skew: vec3(-0.000000, 0.000000, -0.000000)
INFO: Decomposed transform for DEF-forearm.R: Translation(1.39698, -0.410457, -0.515459), Scale(1, 1, 1)
INFO: Bone [DEF-forearm.R.001] FINAL TRANSFORM:
INFO: mat4x4((0.001499, -0.999878, 0.015563, 0.000000), (-0.954322, 0.003220, 0.298762, 0.000000), (-0.298776, -0.015300, -0.954201, 0.000000), (1.396987, -0.543136, -0.506552, 1.000000))
INFO: Bone: DEF-forearm.R.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(1.396987, -0.543136, -0.506552) Skew: vec3(-0.000000, 0.000000, -0.000000)
INFO: Decomposed transform for DEF-forearm.R.001: Translation(1.39699, -0.543136, -0.506552), Scale(1, 1, 1)
INFO: Bone [DEF-hand.R] FINAL TRANSFORM:
INFO: mat4x4((0.029094, -0.998603, -0.044102, 0.000000), (-0.953496, -0.040967, 0.298608, 0.000000), (-0.299997, 0.033363, -0.953356, 0.000000), (1.414435, -0.593003, -0.546839, 1.000000))
INFO: Bone: DEF-hand.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(1.414435, -0.593003, -0.546839) Skew: vec3(-0.000000, 0.000000, -0.000000)
INFO: Decomposed transform for DEF-hand.R: Translation(1.41444, -0.593003, -0.546839), Scale(1, 1, 1)
INFO: Bone [DEF-breast.L] FINAL TRANSFORM:
INFO: mat4x4((-1.000000, -0.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (-0.000000, 1.000000, -0.000000, 0.000000), (0.107252, 0.110391, -1.378726, 1.000000))
INFO: Bone: DEF-breast.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.107252, 0.110391, -1.378726) Skew: vec3(-0.000000, -0.000000, -0.000000)
INFO: Decomposed transform for DEF-breast.L: Translation(0.107252, 0.110391, -1.37873), Scale(1, 1, 1)
INFO: Bone [DEF-breast.R] FINAL TRANSFORM:
INFO: mat4x4((-1.000000, 0.000000, -0.000000, 0.000000), (-0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 1.000000, -0.000000, 0.000000), (-0.107252, 0.110391, -1.378726, 1.000000))
INFO: Bone: DEF-breast.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.107252, 0.110391, -1.378726) Skew: vec3(-0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-breast.R: Translation(-0.107252, 0.110391, -1.37873), Scale(1, 1, 1)
INFO: Bone [DEF-pelvis.L] FINAL TRANSFORM:
INFO: mat4x4((-0.421772, 0.536322, -0.731073, 0.000000), (-0.276838, 0.691624, 0.667096, 0.000000), (0.863406, 0.483751, -0.143234, 0.000000), (0.369463, -0.615484, -0.664677, 1.000000))
INFO: Bone: DEF-pelvis.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.369463, -0.615484, -0.664677) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-pelvis.L: Translation(0.369463, -0.615484, -0.664677), Scale(1, 1, 1)
INFO: Bone [DEF-thigh.L] FINAL TRANSFORM:
INFO: mat4x4((0.935413, -0.093497, 0.340971, 0.000000), (-0.058897, -0.992132, -0.110475, 0.000000), (0.348618, 0.083257, -0.933560, 0.000000), (-0.033043, 1.046192, -0.002256, 1.000000))
INFO: Bone: DEF-thigh.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.033043, 1.046192, -0.002256) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-thigh.L: Translation(-0.0330432, 1.04619, -0.00225596), Scale(1, 1, 1)
INFO: Bone [DEF-thigh.L.001] FINAL TRANSFORM:
INFO: mat4x4((0.935411, -0.093497, 0.340975, 0.000000), (-0.058896, -0.992132, -0.110475, 0.000000), (0.348622, 0.083257, -0.933559, 0.000000), (-0.033043, 0.792186, -0.002256, 1.000000))
INFO: Bone: DEF-thigh.L.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.033043, 0.792186, -0.002256) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-thigh.L.001: Translation(-0.0330431, 0.792186, -0.00225606), Scale(1, 1, 1)
INFO: Bone [DEF-shin.L] FINAL TRANSFORM:
INFO: mat4x4((0.935418, -0.049135, 0.350112, 0.000000), (-0.058899, -0.998115, 0.017290, 0.000000), (0.348603, -0.036795, -0.936548, 0.000000), (-0.033043, 0.533475, -0.071050, 1.000000))
INFO: Bone: DEF-shin.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.033043, 0.533475, -0.071050) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-shin.L: Translation(-0.033043, 0.533475, -0.0710502), Scale(1, 1, 1)
INFO: Bone [DEF-shin.L.001] FINAL TRANSFORM:
INFO: mat4x4((0.935418, -0.049135, 0.350112, 0.000000), (-0.058899, -0.998115, 0.017290, 0.000000), (0.348602, -0.036795, -0.936549, 0.000000), (-0.033043, 0.321455, -0.071050, 1.000000))
INFO: Bone: DEF-shin.L.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.033043, 0.321455, -0.071050) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-shin.L.001: Translation(-0.033043, 0.321455, -0.0710502), Scale(1, 1, 1)
INFO: Bone [DEF-foot.L] FINAL TRANSFORM:
INFO: mat4x4((0.964083, 0.178993, 0.196227, 0.000000), (0.265600, -0.649715, -0.712269, 0.000000), (0.000001, 0.738804, -0.673920, 0.000000), (-0.087785, 0.097230, 0.030920, 1.000000))
INFO: Bone: DEF-foot.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.087785, 0.097230, 0.030920) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-foot.L: Translation(-0.0877855, 0.0972305, 0.0309203), Scale(1, 1, 1)
INFO: Bone [DEF-toe.L] FINAL TRANSFORM:
INFO: mat4x4((-0.964083, 0.000000, -0.265599, 0.000000), (-0.265600, 0.000000, 0.964084, 0.000000), (-0.000000, 1.000000, 0.000000, 0.000000), (0.087785, -0.018148, -0.025298, 1.000000))
INFO: Bone: DEF-toe.L Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.087785, -0.018148, -0.025298) Skew: vec3(0.000000, 0.000000, 0.000000)
INFO: Decomposed transform for DEF-toe.L: Translation(0.0877854, -0.0181482, -0.0252975), Scale(1, 1, 1)
INFO: Bone [DEF-pelvis.R] FINAL TRANSFORM:
INFO: mat4x4((-0.421772, -0.536322, 0.731073, 0.000000), (0.276838, 0.691624, 0.667096, 0.000000), (-0.863406, 0.483751, -0.143234, 0.000000), (-0.369463, -0.615484, -0.664677, 1.000000))
INFO: Bone: DEF-pelvis.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.369463, -0.615484, -0.664677) Skew: vec3(0.000000, -0.000000, -0.000000)
INFO: Decomposed transform for DEF-pelvis.R: Translation(-0.369463, -0.615484, -0.664677), Scale(1, 1, 1)
INFO: Bone [DEF-thigh.R] FINAL TRANSFORM:
INFO: mat4x4((0.935413, 0.093497, -0.340971, 0.000000), (0.058897, -0.992132, -0.110475, 0.000000), (-0.348618, 0.083257, -0.933560, 0.000000), (0.033043, 1.046192, -0.002256, 1.000000))
INFO: Bone: DEF-thigh.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.033043, 1.046192, -0.002256) Skew: vec3(0.000000, -0.000000, -0.000000)
INFO: Decomposed transform for DEF-thigh.R: Translation(0.0330432, 1.04619, -0.00225596), Scale(1, 1, 1)
INFO: Bone [DEF-thigh.R.001] FINAL TRANSFORM:
INFO: mat4x4((0.935411, 0.093497, -0.340975, 0.000000), (0.058896, -0.992132, -0.110475, 0.000000), (-0.348622, 0.083257, -0.933559, 0.000000), (0.033043, 0.792186, -0.002256, 1.000000))
INFO: Bone: DEF-thigh.R.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.033043, 0.792186, -0.002256) Skew: vec3(0.000000, -0.000000, -0.000000)
INFO: Decomposed transform for DEF-thigh.R.001: Translation(0.0330431, 0.792186, -0.00225606), Scale(1, 1, 1)
INFO: Bone [DEF-shin.R] FINAL TRANSFORM:
INFO: mat4x4((0.935418, 0.049135, -0.350112, 0.000000), (0.058899, -0.998115, 0.017290, 0.000000), (-0.348603, -0.036795, -0.936548, 0.000000), (0.033043, 0.533475, -0.071050, 1.000000))
INFO: Bone: DEF-shin.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.033043, 0.533475, -0.071050) Skew: vec3(0.000000, -0.000000, -0.000000)
INFO: Decomposed transform for DEF-shin.R: Translation(0.033043, 0.533475, -0.0710502), Scale(1, 1, 1)
INFO: Bone [DEF-shin.R.001] FINAL TRANSFORM:
INFO: mat4x4((0.935418, 0.049135, -0.350112, 0.000000), (0.058899, -0.998115, 0.017290, 0.000000), (-0.348602, -0.036795, -0.936549, 0.000000), (0.033043, 0.321455, -0.071050, 1.000000))
INFO: Bone: DEF-shin.R.001 Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.033043, 0.321455, -0.071050) Skew: vec3(0.000000, -0.000000, -0.000000)
INFO: Decomposed transform for DEF-shin.R.001: Translation(0.033043, 0.321455, -0.0710502), Scale(1, 1, 1)
INFO: Bone [DEF-foot.R] FINAL TRANSFORM:
INFO: mat4x4((0.964083, -0.178993, -0.196227, 0.000000), (-0.265600, -0.649715, -0.712269, 0.000000), (-0.000001, 0.738804, -0.673920, 0.000000), (0.087785, 0.097230, 0.030920, 1.000000))
INFO: Bone: DEF-foot.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(0.087785, 0.097230, 0.030920) Skew: vec3(0.000000, -0.000000, -0.000000)
INFO: Decomposed transform for DEF-foot.R: Translation(0.0877855, 0.0972305, 0.0309203), Scale(1, 1, 1)
INFO: Bone [DEF-toe.R] FINAL TRANSFORM:
INFO: mat4x4((-0.964083, -0.000000, 0.265599, 0.000000), (0.265600, 0.000000, 0.964084, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (-0.087785, -0.018148, -0.025298, 1.000000))
INFO: Bone: DEF-toe.R Scale: vec3(1.000000, 1.000000, 1.000000) Translation: vec3(-0.087785, -0.018148, -0.025298) Skew: vec3(0.000000, -0.000000, -0.000000)
INFO: Decomposed transform for DEF-toe.R: Translation(-0.0877854, -0.0181482, -0.0252975), Scale(1, 1, 1)
INFO: DEBUG: Max Vertex Attributes: 32
INFO: Drawing mesh with VAO: 1
INFO: DEBUG: Depth testing and blending enabled.
INFO: Debug: Animation time updated to: 0.471901
INFO: INFO: Interpolating keyframes at animation time: 0.471901
INFO: INFO: Keyframe count: 31
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-forearm.L with factor: 0.235950
WARNING: ANIM FINAL MATRIX: DEF-forearm.L @ time 0.471901
WARNING: mat4x4((1.000000, -0.000006, -0.000111, 0.000000), (0.000008, 0.999684, 0.025129, 0.000000), (0.000111, -0.025129, 0.999684, 0.000000), (0.000000, 0.031105, 0.000000, 1.000000))
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-forearm.L.001 with factor: 0.235950
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-forearm.R with factor: 0.235950
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-forearm.R.001 with factor: 0.235950
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-hand.L with factor: 0.235950
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-hand.R with factor: 0.235950
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-upper_arm.L with factor: 0.235950
WARNING: ANIM FINAL MATRIX: DEF-upper_arm.L @ time 0.471901
WARNING: mat4x4((0.951115, -0.107767, 0.289426, 0.000000), (0.133993, 0.988340, -0.072323, 0.000000), (-0.278257, 0.107569, 0.954464, 0.000000), (0.001665, 0.042916, -0.004357, 1.000000))
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-upper_arm.L.001 with factor: 0.235950
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-upper_arm.R with factor: 0.235950
INFO: Interpolating Keyframes
INFO: Bone Transform Interpolation at factor: 0.235950
INFO: INFO: Interpolated bone: DEF-upper_arm.R.001 with factor: 0.235950
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-breast.L]:
mat4x4((-1.000000, -0.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (-0.000000, 1.000000, -0.000000, 0.000000), (0.107252, 0.110391, -1.378726, 1.000000))
INFO: DEBUG: After Storing Bone DEF-breast.L
INFO: Applied globalInverse * global * offset for bone: DEF-breast.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-breast.R]:
mat4x4((-1.000000, 0.000000, -0.000000, 0.000000), (-0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 1.000000, -0.000000, 0.000000), (-0.107252, 0.110391, -1.378726, 1.000000))
INFO: DEBUG: After Storing Bone DEF-breast.R
INFO: Applied globalInverse * global * offset for bone: DEF-breast.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-foot.L]:
mat4x4((0.964083, 0.178993, 0.196227, 0.000000), (0.265600, -0.649715, -0.712269, 0.000000), (0.000001, 0.738804, -0.673920, 0.000000), (-0.087785, 0.097230, 0.030920, 1.000000))
INFO: DEBUG: After Storing Bone DEF-foot.L
INFO: Applied globalInverse * global * offset for bone: DEF-foot.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-foot.R]:
mat4x4((0.964083, -0.178993, -0.196227, 0.000000), (-0.265600, -0.649715, -0.712269, 0.000000), (-0.000001, 0.738804, -0.673920, 0.000000), (0.087785, 0.097230, 0.030920, 1.000000))
INFO: DEBUG: After Storing Bone DEF-foot.R
INFO: Applied globalInverse * global * offset for bone: DEF-foot.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-forearm.L]:
mat4x4((0.001508, 0.999953, 0.009568, 0.000000), (0.954324, -0.004298, 0.298742, 0.000000), (0.298769, 0.008680, -0.954286, 0.000000), (-1.396995, -0.401752, -0.517583, 1.000000))
WARNING: === DEBUG: FINAL TRANSFORM APPLY FOR DEF-forearm.L ===
WARNING: Global Transform:
mat4x4((1.000000, -0.000006, -0.000111, 0.000000), (0.000008, 0.999684, 0.025129, 0.000000), (0.000111, -0.025129, 0.999684, 0.000000), (0.000000, 0.031105, 0.000000, 1.000000))
WARNING: Offset Matrix (Inverse Bind Pose):
mat4x4((0.001501, 0.999878, -0.015562, 0.000000), (0.954291, 0.003219, 0.298861, 0.000000), (0.298875, -0.015300, -0.954170, 0.000000), (-1.396935, -0.445738, -0.506697, 1.000000))
WARNING: Global Inverse Transform:
mat4x4((1.000000, -0.000000, 0.000000, -0.000000), (-0.000000, 1.000000, -0.000000, 0.000000), (0.000000, -0.000000, 1.000000, -0.000000), (-0.000000, 0.000000, -0.000000, 1.000000))
WARNING: Resulting Final Transform:
mat4x4((0.001508, 0.999953, 0.009568, 0.000000), (0.954324, -0.004298, 0.298742, 0.000000), (0.298769, 0.008680, -0.954286, 0.000000), (-1.396995, -0.401752, -0.517583, 1.000000))
INFO: Decomposed transform for DEF-forearm.L: Translation(-1.39699, -0.401752, -0.517583), Scale(1, 1, 1)
INFO: DEBUG: After Storing Bone DEF-forearm.L
INFO: Applied globalInverse * global * offset for bone: DEF-forearm.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-forearm.L.001]:
mat4x4((0.001499, 0.999878, -0.015563, 0.000000), (0.954330, 0.003219, 0.298738, 0.000000), (0.298752, -0.015300, -0.954208, 0.000000), (-1.397000, -0.537539, -0.506516, 1.000000))
INFO: DEBUG: After Storing Bone DEF-forearm.L.001
INFO: Applied globalInverse * global * offset for bone: DEF-forearm.L.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-forearm.R]:
mat4x4((0.001508, -0.999953, -0.009568, 0.000000), (-0.954324, -0.004298, 0.298742, 0.000000), (-0.298769, 0.008680, -0.954286, 0.000000), (1.396995, -0.401751, -0.517583, 1.000000))
INFO: DEBUG: After Storing Bone DEF-forearm.R
INFO: Applied globalInverse * global * offset for bone: DEF-forearm.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-forearm.R.001]:
mat4x4((0.001498, -0.999878, 0.015563, 0.000000), (-0.954330, 0.003220, 0.298738, 0.000000), (-0.298751, -0.015300, -0.954208, 0.000000), (1.397000, -0.537540, -0.506516, 1.000000))
INFO: DEBUG: After Storing Bone DEF-forearm.R.001
INFO: Applied globalInverse * global * offset for bone: DEF-forearm.R.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-hand.L]:
mat4x4((0.029287, 0.998744, 0.040658, 0.000000), (0.953510, -0.040119, 0.298679, 0.000000), (0.299935, 0.030020, -0.953487, 0.000000), (-1.414591, -0.589018, -0.544612, 1.000000))
INFO: DEBUG: After Storing Bone DEF-hand.L
INFO: Applied globalInverse * global * offset for bone: DEF-hand.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-hand.R]:
mat4x4((0.029287, -0.998744, -0.040658, 0.000000), (-0.953510, -0.040120, 0.298679, 0.000000), (-0.299935, 0.030020, -0.953487, 0.000000), (1.414592, -0.589017, -0.544612, 1.000000))
INFO: DEBUG: After Storing Bone DEF-hand.R
INFO: Applied globalInverse * global * offset for bone: DEF-hand.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-pelvis.L]:
mat4x4((-0.421772, 0.536322, -0.731073, 0.000000), (-0.276838, 0.691624, 0.667096, 0.000000), (0.863406, 0.483751, -0.143234, 0.000000), (0.369463, -0.615484, -0.664677, 1.000000))
INFO: DEBUG: After Storing Bone DEF-pelvis.L
INFO: Applied globalInverse * global * offset for bone: DEF-pelvis.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-pelvis.R]:
mat4x4((-0.421772, -0.536322, 0.731073, 0.000000), (0.276838, 0.691624, 0.667096, 0.000000), (-0.863406, 0.483751, -0.143234, 0.000000), (-0.369463, -0.615484, -0.664677, 1.000000))
INFO: DEBUG: After Storing Bone DEF-pelvis.R
INFO: Applied globalInverse * global * offset for bone: DEF-pelvis.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shin.L]:
mat4x4((0.935418, -0.049135, 0.350112, 0.000000), (-0.058899, -0.998115, 0.017290, 0.000000), (0.348603, -0.036795, -0.936548, 0.000000), (-0.033043, 0.533475, -0.071050, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shin.L
INFO: Applied globalInverse * global * offset for bone: DEF-shin.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shin.L.001]:
mat4x4((0.935418, -0.049135, 0.350112, 0.000000), (-0.058899, -0.998115, 0.017290, 0.000000), (0.348602, -0.036795, -0.936549, 0.000000), (-0.033043, 0.321455, -0.071050, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shin.L.001
INFO: Applied globalInverse * global * offset for bone: DEF-shin.L.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shin.R]:
mat4x4((0.935418, 0.049135, -0.350112, 0.000000), (0.058899, -0.998115, 0.017290, 0.000000), (-0.348603, -0.036795, -0.936548, 0.000000), (0.033043, 0.533475, -0.071050, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shin.R
INFO: Applied globalInverse * global * offset for bone: DEF-shin.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shin.R.001]:
mat4x4((0.935418, 0.049135, -0.350112, 0.000000), (0.058899, -0.998115, 0.017290, 0.000000), (-0.348602, -0.036795, -0.936549, 0.000000), (0.033043, 0.321455, -0.071050, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shin.R.001
INFO: Applied globalInverse * global * offset for bone: DEF-shin.R.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shoulder.L]:
mat4x4((0.507095, 0.861890, 0.000529, 0.000000), (-0.000074, -0.000570, 1.000000, 0.000000), (0.861890, -0.507095, -0.000226, 0.000000), (-0.004417, -0.015707, -1.510536, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shoulder.L
INFO: Applied globalInverse * global * offset for bone: DEF-shoulder.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-shoulder.R]:
mat4x4((0.507095, -0.861890, -0.000529, 0.000000), (0.000074, -0.000570, 1.000000, 0.000000), (-0.861890, -0.507095, -0.000226, 0.000000), (0.004417, -0.015707, -1.510536, 1.000000))
INFO: DEBUG: After Storing Bone DEF-shoulder.R
INFO: Applied globalInverse * global * offset for bone: DEF-shoulder.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.971880, -0.235478, 0.000000), (0.000000, 0.235478, 0.971880, 0.000000), (0.000000, -0.916629, 0.341921, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine
INFO: Applied globalInverse * global * offset for bone: DEF-spine
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.001]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.992413, -0.122954, 0.000000), (0.000000, 0.122954, 0.992412, 0.000000), (0.000000, -1.104045, 0.217266, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.001
INFO: Applied globalInverse * global * offset for bone: DEF-spine.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.002]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999869, 0.016174, 0.000000), (0.000000, -0.016174, 0.999869, 0.000000), (0.000000, -1.211187, 0.049404, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.002
INFO: Applied globalInverse * global * offset for bone: DEF-spine.002
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.003]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.999592, 0.028560, 0.000000), (0.000000, -0.028560, 0.999592, 0.000000), (0.000000, -1.385738, 0.032239, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.003
INFO: Applied globalInverse * global * offset for bone: DEF-spine.003
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.004]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.929516, -0.368784, 0.000000), (0.000000, 0.368784, 0.929515, 0.000000), (0.000000, -1.420450, 0.646168, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.004
INFO: Applied globalInverse * global * offset for bone: DEF-spine.004
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.005]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 0.982436, -0.186599, 0.000000), (0.000000, 0.186599, 0.982436, 0.000000), (0.000000, -1.575778, 0.354954, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.005
INFO: Applied globalInverse * global * offset for bone: DEF-spine.005
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-spine.006]:
mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, -0.000000, 1.000000, 0.000000), (0.000000, -1.670135, 0.044083, 1.000000))
INFO: DEBUG: After Storing Bone DEF-spine.006
INFO: Applied globalInverse * global * offset for bone: DEF-spine.006
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-thigh.L]:
mat4x4((0.935413, -0.093497, 0.340971, 0.000000), (-0.058897, -0.992132, -0.110475, 0.000000), (0.348618, 0.083257, -0.933560, 0.000000), (-0.033043, 1.046192, -0.002256, 1.000000))
INFO: DEBUG: After Storing Bone DEF-thigh.L
INFO: Applied globalInverse * global * offset for bone: DEF-thigh.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-thigh.L.001]:
mat4x4((0.935411, -0.093497, 0.340975, 0.000000), (-0.058896, -0.992132, -0.110475, 0.000000), (0.348622, 0.083257, -0.933559, 0.000000), (-0.033043, 0.792186, -0.002256, 1.000000))
INFO: DEBUG: After Storing Bone DEF-thigh.L.001
INFO: Applied globalInverse * global * offset for bone: DEF-thigh.L.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-thigh.R]:
mat4x4((0.935413, 0.093497, -0.340971, 0.000000), (0.058897, -0.992132, -0.110475, 0.000000), (-0.348618, 0.083257, -0.933560, 0.000000), (0.033043, 1.046192, -0.002256, 1.000000))
INFO: DEBUG: After Storing Bone DEF-thigh.R
INFO: Applied globalInverse * global * offset for bone: DEF-thigh.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-thigh.R.001]:
mat4x4((0.935411, 0.093497, -0.340975, 0.000000), (0.058896, -0.992132, -0.110475, 0.000000), (-0.348622, 0.083257, -0.933559, 0.000000), (0.033043, 0.792186, -0.002256, 1.000000))
INFO: DEBUG: After Storing Bone DEF-thigh.R.001
INFO: Applied globalInverse * global * offset for bone: DEF-thigh.R.001
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-toe.L]:
mat4x4((-0.964083, 0.000000, -0.265599, 0.000000), (-0.265600, 0.000000, 0.964084, 0.000000), (-0.000000, 1.000000, 0.000000, 0.000000), (0.087785, -0.018148, -0.025298, 1.000000))
INFO: DEBUG: After Storing Bone DEF-toe.L
INFO: Applied globalInverse * global * offset for bone: DEF-toe.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-toe.R]:
mat4x4((-0.964083, -0.000000, 0.265599, 0.000000), (0.265600, 0.000000, 0.964084, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (-0.087785, -0.018148, -0.025298, 1.000000))
INFO: DEBUG: After Storing Bone DEF-toe.R
INFO: Applied globalInverse * global * offset for bone: DEF-toe.R
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-upper_arm.L]:
mat4x4((0.115198, 0.993336, -0.003512, 0.000000), (0.821665, -0.093301, 0.562282, 0.000000), (0.558208, -0.067660, -0.826938, 0.000000), (-1.194005, 0.000252, -0.917593, 1.000000))
WARNING: === DEBUG: FINAL TRANSFORM APPLY FOR DEF-upper_arm.L ===
WARNING: Global Transform:
mat4x4((0.951115, -0.107767, 0.289426, 0.000000), (0.133993, 0.988340, -0.072323, 0.000000), (-0.278257, 0.107569, 0.954464, 0.000000), (0.001665, 0.042916, -0.004357, 1.000000))
WARNING: Offset Matrix (Inverse Bind Pose):
mat4x4((0.001501, 0.997443, 0.071445, 0.000000), (0.954292, -0.022782, 0.298008, 0.000000), (0.298874, 0.067732, -0.951886, 0.000000), (-1.396935, -0.136329, -0.543537, 1.000000))
WARNING: Global Inverse Transform:
mat4x4((1.000000, -0.000000, 0.000000, -0.000000), (-0.000000, 1.000000, -0.000000, 0.000000), (0.000000, -0.000000, 1.000000, -0.000000), (-0.000000, 0.000000, -0.000000, 1.000000))
WARNING: Resulting Final Transform:
mat4x4((0.115198, 0.993336, -0.003512, 0.000000), (0.821665, -0.093301, 0.562282, 0.000000), (0.558208, -0.067660, -0.826938, 0.000000), (-1.194005, 0.000252, -0.917593, 1.000000))
INFO: Decomposed transform for DEF-upper_arm.L: Translation(-1.194, 0.000251833, -0.917593), Scale(1, 1, 1)
INFO: DEBUG: After Storing Bone DEF-upper_arm.L
INFO: Applied globalInverse * global * offset for bone: DEF-upper_arm.L
WARNING: DEBUG: Final (GlobalInverse * Global * Offset) Transform for bone [DEF-upper_arm.L.001]: